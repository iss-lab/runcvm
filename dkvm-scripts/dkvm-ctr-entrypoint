#!/opt/dkvm/bin/bash

# SAVE ENTRYPOINT
args=("$@")
printf "%s\n" "${args[@]}" >/.dkvm/entrypoint

# SAVE ENVIRONMENT
export -n SHLVL
env >/.dkvm/env
export >/.dkvm/export

# NOW LOAD DEFAULT ENV AND PATH
. /opt/dkvm/scripts/dkvm-ctr-defaults && PATH="$DKVM_PATH"

# DEBUG
# exec bash

# SAVE NETWORKING CONFIG
DOCKER_IF=$(ip -json route show | jq -r '.[] | select(.dst == "default") | .dev')
DOCKER_GW=$(ip -json route show | jq -r '.[] | select(.dst == "default") | .gateway')
DOCKER_IP=$(ip addr show dev $DOCKER_IF | grep inet | head -n 1 | awk '{print $2}')

echo $DOCKER_IP >/.dkvm/net
echo $DOCKER_GW >/.dkvm/netgw

# RECONFIGURE CONTAINER NETWORK
ip addr flush dev $DOCKER_IF

# https://bugs.launchpad.net/neutron/+bug/1738659
ip link add $QEMU_BRIDGE type bridge forward_delay 0 ageing 0

ip link set dev $DOCKER_IF master $QEMU_BRIDGE
ip link set dev $DOCKER_IF up
ip link set dev $QEMU_BRIDGE up

# DEBUG
# exec bash

# LAUNCH VIRTIOFSD
/opt/dkvm/scripts/dkvm-ctr-virtiofsd &

# LAUNCH INIT SUPERVISING QEMU
# FIXME: Add -v to debug
exec /opt/dkvm/sbin/dkvm-init -c /opt/dkvm/scripts/dkvm-ctr-qemu